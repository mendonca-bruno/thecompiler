// Generated from C:\Users\BrunoPC\Documents\Compiladores\p4\thecompiler\Compelado\grammar\gramaticona\myGram.g4 by ANTLR 4.6

    package gramaticona;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class myGramLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.6", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, GRAMATICA=12, IMPORT=13, TRUE=14, FALSE=15, FOR=16, 
		WHILE=17, GRT=18, LESS=19, GRTEQ=20, LESSEQ=21, EQ=22, NEQ=23, OR=24, 
		IF=25, AND=26, ELSE=27, PRINT=28, MAIN=29, INT=30, FLOAT=31, DOUBLE=32, 
		STRING=33, VOID=34, BOOL=35, READ=36, RET=37, OBR=38, CBR=39, EOL=40, 
		GLOBAL=41, STRVALUE=42, VAR=43, PRINTCONC=44, NUM=45, COMMENT=46, LINE_COMMENT=47, 
		WS=48, COM=49;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "GRAMATICA", "IMPORT", "TRUE", "FALSE", "FOR", "WHILE", 
		"GRT", "LESS", "GRTEQ", "LESSEQ", "EQ", "NEQ", "OR", "IF", "AND", "ELSE", 
		"PRINT", "MAIN", "INT", "FLOAT", "DOUBLE", "STRING", "VOID", "BOOL", "READ", 
		"RET", "OBR", "CBR", "EOL", "GLOBAL", "STRVALUE", "VAR", "PRINTCONC", 
		"NUM", "COMMENT", "LINE_COMMENT", "WS", "COM"
	};

	private static final String[] _LITERAL_NAMES = {
		null, "'.'", "'('", "'0'", "')'", "'!'", "'+'", "'='", "'-'", "'*'", "'/'", 
		"'%'", "'gramaticaextensao'", "'import'", "'true'", "'false'", "'for'", 
		"'while'", "'>'", "'<'", "'>='", "'<='", "'=='", "'!='", "'||'", "'if'", 
		"'&&'", "'else'", "'print'", "'main'", "'int'", "'float'", "'double'", 
		"'string'", "'void'", "'boolean'", "'read'", "'return'", "'{'", "'}'", 
		"';'", "'global'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		"GRAMATICA", "IMPORT", "TRUE", "FALSE", "FOR", "WHILE", "GRT", "LESS", 
		"GRTEQ", "LESSEQ", "EQ", "NEQ", "OR", "IF", "AND", "ELSE", "PRINT", "MAIN", 
		"INT", "FLOAT", "DOUBLE", "STRING", "VOID", "BOOL", "READ", "RET", "OBR", 
		"CBR", "EOL", "GLOBAL", "STRVALUE", "VAR", "PRINTCONC", "NUM", "COMMENT", 
		"LINE_COMMENT", "WS", "COM"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public myGramLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "myGram.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2\63\u017d\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\3\2\3\2\3\3\3"+
		"\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t\3\n\3\n\3\13\3\13\3"+
		"\f\3\f\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r"+
		"\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\17\3"+
		"\20\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3"+
		"\22\3\22\3\23\3\23\3\24\3\24\3\25\3\25\3\25\3\26\3\26\3\26\3\27\3\27\3"+
		"\27\3\30\3\30\3\30\3\31\3\31\3\31\3\32\3\32\3\32\3\33\3\33\3\33\3\34\3"+
		"\34\3\34\3\34\3\34\3\35\3\35\3\35\3\35\3\35\3\35\3\36\3\36\3\36\3\36\3"+
		"\36\3\37\3\37\3\37\3\37\3 \3 \3 \3 \3 \3 \3!\3!\3!\3!\3!\3!\3!\3\"\3\""+
		"\3\"\3\"\3\"\3\"\3\"\3#\3#\3#\3#\3#\3$\3$\3$\3$\3$\3$\3$\3$\3%\3%\3%\3"+
		"%\3%\3&\3&\3&\3&\3&\3&\3&\3\'\3\'\3(\3(\3)\3)\3*\3*\3*\3*\3*\3*\3*\3+"+
		"\3+\5+\u0113\n+\3+\7+\u0116\n+\f+\16+\u0119\13+\3+\3+\3,\3,\7,\u011f\n"+
		",\f,\16,\u0122\13,\3-\5-\u0125\n-\3-\3-\5-\u0129\n-\3-\7-\u012c\n-\f-"+
		"\16-\u012f\13-\3-\6-\u0132\n-\r-\16-\u0133\3-\3-\5-\u0138\n-\6-\u013a"+
		"\n-\r-\16-\u013b\3.\5.\u013f\n.\3.\6.\u0142\n.\r.\16.\u0143\3.\3.\6.\u0148"+
		"\n.\r.\16.\u0149\5.\u014c\n.\3/\3/\3/\3/\7/\u0152\n/\f/\16/\u0155\13/"+
		"\3/\3/\3/\3/\3/\3\60\3\60\3\60\3\60\7\60\u0160\n\60\f\60\16\60\u0163\13"+
		"\60\3\60\3\60\3\61\6\61\u0168\n\61\r\61\16\61\u0169\3\61\3\61\3\62\3\62"+
		"\3\62\3\62\7\62\u0172\n\62\f\62\16\62\u0175\13\62\3\62\5\62\u0178\n\62"+
		"\3\62\3\62\3\62\3\62\3\u0153\2\63\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23"+
		"\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31"+
		"\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60"+
		"_\61a\62c\63\3\2\n\6\2\"\"\62;C\\c|\b\2\"\"\60\60\62<C\\aac|\4\2C\\c|"+
		"\6\2\62;C\\aac|\3\2//\3\2\62;\4\2\f\f\17\17\5\2\13\f\17\17\"\"\u018e\2"+
		"\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2"+
		"\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2"+
		"\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2"+
		"\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2"+
		"\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2"+
		"\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2"+
		"\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U"+
		"\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2"+
		"\2\2\2c\3\2\2\2\3e\3\2\2\2\5g\3\2\2\2\7i\3\2\2\2\tk\3\2\2\2\13m\3\2\2"+
		"\2\ro\3\2\2\2\17q\3\2\2\2\21s\3\2\2\2\23u\3\2\2\2\25w\3\2\2\2\27y\3\2"+
		"\2\2\31{\3\2\2\2\33\u008d\3\2\2\2\35\u0094\3\2\2\2\37\u0099\3\2\2\2!\u009f"+
		"\3\2\2\2#\u00a3\3\2\2\2%\u00a9\3\2\2\2\'\u00ab\3\2\2\2)\u00ad\3\2\2\2"+
		"+\u00b0\3\2\2\2-\u00b3\3\2\2\2/\u00b6\3\2\2\2\61\u00b9\3\2\2\2\63\u00bc"+
		"\3\2\2\2\65\u00bf\3\2\2\2\67\u00c2\3\2\2\29\u00c7\3\2\2\2;\u00cd\3\2\2"+
		"\2=\u00d2\3\2\2\2?\u00d6\3\2\2\2A\u00dc\3\2\2\2C\u00e3\3\2\2\2E\u00ea"+
		"\3\2\2\2G\u00ef\3\2\2\2I\u00f7\3\2\2\2K\u00fc\3\2\2\2M\u0103\3\2\2\2O"+
		"\u0105\3\2\2\2Q\u0107\3\2\2\2S\u0109\3\2\2\2U\u0110\3\2\2\2W\u011c\3\2"+
		"\2\2Y\u0139\3\2\2\2[\u013e\3\2\2\2]\u014d\3\2\2\2_\u015b\3\2\2\2a\u0167"+
		"\3\2\2\2c\u016d\3\2\2\2ef\7\60\2\2f\4\3\2\2\2gh\7*\2\2h\6\3\2\2\2ij\7"+
		"\62\2\2j\b\3\2\2\2kl\7+\2\2l\n\3\2\2\2mn\7#\2\2n\f\3\2\2\2op\7-\2\2p\16"+
		"\3\2\2\2qr\7?\2\2r\20\3\2\2\2st\7/\2\2t\22\3\2\2\2uv\7,\2\2v\24\3\2\2"+
		"\2wx\7\61\2\2x\26\3\2\2\2yz\7\'\2\2z\30\3\2\2\2{|\7i\2\2|}\7t\2\2}~\7"+
		"c\2\2~\177\7o\2\2\177\u0080\7c\2\2\u0080\u0081\7v\2\2\u0081\u0082\7k\2"+
		"\2\u0082\u0083\7e\2\2\u0083\u0084\7c\2\2\u0084\u0085\7g\2\2\u0085\u0086"+
		"\7z\2\2\u0086\u0087\7v\2\2\u0087\u0088\7g\2\2\u0088\u0089\7p\2\2\u0089"+
		"\u008a\7u\2\2\u008a\u008b\7c\2\2\u008b\u008c\7q\2\2\u008c\32\3\2\2\2\u008d"+
		"\u008e\7k\2\2\u008e\u008f\7o\2\2\u008f\u0090\7r\2\2\u0090\u0091\7q\2\2"+
		"\u0091\u0092\7t\2\2\u0092\u0093\7v\2\2\u0093\34\3\2\2\2\u0094\u0095\7"+
		"v\2\2\u0095\u0096\7t\2\2\u0096\u0097\7w\2\2\u0097\u0098\7g\2\2\u0098\36"+
		"\3\2\2\2\u0099\u009a\7h\2\2\u009a\u009b\7c\2\2\u009b\u009c\7n\2\2\u009c"+
		"\u009d\7u\2\2\u009d\u009e\7g\2\2\u009e \3\2\2\2\u009f\u00a0\7h\2\2\u00a0"+
		"\u00a1\7q\2\2\u00a1\u00a2\7t\2\2\u00a2\"\3\2\2\2\u00a3\u00a4\7y\2\2\u00a4"+
		"\u00a5\7j\2\2\u00a5\u00a6\7k\2\2\u00a6\u00a7\7n\2\2\u00a7\u00a8\7g\2\2"+
		"\u00a8$\3\2\2\2\u00a9\u00aa\7@\2\2\u00aa&\3\2\2\2\u00ab\u00ac\7>\2\2\u00ac"+
		"(\3\2\2\2\u00ad\u00ae\7@\2\2\u00ae\u00af\7?\2\2\u00af*\3\2\2\2\u00b0\u00b1"+
		"\7>\2\2\u00b1\u00b2\7?\2\2\u00b2,\3\2\2\2\u00b3\u00b4\7?\2\2\u00b4\u00b5"+
		"\7?\2\2\u00b5.\3\2\2\2\u00b6\u00b7\7#\2\2\u00b7\u00b8\7?\2\2\u00b8\60"+
		"\3\2\2\2\u00b9\u00ba\7~\2\2\u00ba\u00bb\7~\2\2\u00bb\62\3\2\2\2\u00bc"+
		"\u00bd\7k\2\2\u00bd\u00be\7h\2\2\u00be\64\3\2\2\2\u00bf\u00c0\7(\2\2\u00c0"+
		"\u00c1\7(\2\2\u00c1\66\3\2\2\2\u00c2\u00c3\7g\2\2\u00c3\u00c4\7n\2\2\u00c4"+
		"\u00c5\7u\2\2\u00c5\u00c6\7g\2\2\u00c68\3\2\2\2\u00c7\u00c8\7r\2\2\u00c8"+
		"\u00c9\7t\2\2\u00c9\u00ca\7k\2\2\u00ca\u00cb\7p\2\2\u00cb\u00cc\7v\2\2"+
		"\u00cc:\3\2\2\2\u00cd\u00ce\7o\2\2\u00ce\u00cf\7c\2\2\u00cf\u00d0\7k\2"+
		"\2\u00d0\u00d1\7p\2\2\u00d1<\3\2\2\2\u00d2\u00d3\7k\2\2\u00d3\u00d4\7"+
		"p\2\2\u00d4\u00d5\7v\2\2\u00d5>\3\2\2\2\u00d6\u00d7\7h\2\2\u00d7\u00d8"+
		"\7n\2\2\u00d8\u00d9\7q\2\2\u00d9\u00da\7c\2\2\u00da\u00db\7v\2\2\u00db"+
		"@\3\2\2\2\u00dc\u00dd\7f\2\2\u00dd\u00de\7q\2\2\u00de\u00df\7w\2\2\u00df"+
		"\u00e0\7d\2\2\u00e0\u00e1\7n\2\2\u00e1\u00e2\7g\2\2\u00e2B\3\2\2\2\u00e3"+
		"\u00e4\7u\2\2\u00e4\u00e5\7v\2\2\u00e5\u00e6\7t\2\2\u00e6\u00e7\7k\2\2"+
		"\u00e7\u00e8\7p\2\2\u00e8\u00e9\7i\2\2\u00e9D\3\2\2\2\u00ea\u00eb\7x\2"+
		"\2\u00eb\u00ec\7q\2\2\u00ec\u00ed\7k\2\2\u00ed\u00ee\7f\2\2\u00eeF\3\2"+
		"\2\2\u00ef\u00f0\7d\2\2\u00f0\u00f1\7q\2\2\u00f1\u00f2\7q\2\2\u00f2\u00f3"+
		"\7n\2\2\u00f3\u00f4\7g\2\2\u00f4\u00f5\7c\2\2\u00f5\u00f6\7p\2\2\u00f6"+
		"H\3\2\2\2\u00f7\u00f8\7t\2\2\u00f8\u00f9\7g\2\2\u00f9\u00fa\7c\2\2\u00fa"+
		"\u00fb\7f\2\2\u00fbJ\3\2\2\2\u00fc\u00fd\7t\2\2\u00fd\u00fe\7g\2\2\u00fe"+
		"\u00ff\7v\2\2\u00ff\u0100\7w\2\2\u0100\u0101\7t\2\2\u0101\u0102\7p\2\2"+
		"\u0102L\3\2\2\2\u0103\u0104\7}\2\2\u0104N\3\2\2\2\u0105\u0106\7\177\2"+
		"\2\u0106P\3\2\2\2\u0107\u0108\7=\2\2\u0108R\3\2\2\2\u0109\u010a\7i\2\2"+
		"\u010a\u010b\7n\2\2\u010b\u010c\7q\2\2\u010c\u010d\7d\2\2\u010d\u010e"+
		"\7c\2\2\u010e\u010f\7n\2\2\u010fT\3\2\2\2\u0110\u0112\7$\2\2\u0111\u0113"+
		"\t\2\2\2\u0112\u0111\3\2\2\2\u0112\u0113\3\2\2\2\u0113\u0117\3\2\2\2\u0114"+
		"\u0116\t\3\2\2\u0115\u0114\3\2\2\2\u0116\u0119\3\2\2\2\u0117\u0115\3\2"+
		"\2\2\u0117\u0118\3\2\2\2\u0118\u011a\3\2\2\2\u0119\u0117\3\2\2\2\u011a"+
		"\u011b\7$\2\2\u011bV\3\2\2\2\u011c\u0120\t\4\2\2\u011d\u011f\t\5\2\2\u011e"+
		"\u011d\3\2\2\2\u011f\u0122\3\2\2\2\u0120\u011e\3\2\2\2\u0120\u0121\3\2"+
		"\2\2\u0121X\3\2\2\2\u0122\u0120\3\2\2\2\u0123\u0125\7-\2\2\u0124\u0123"+
		"\3\2\2\2\u0124\u0125\3\2\2\2\u0125\u0126\3\2\2\2\u0126\u0128\7$\2\2\u0127"+
		"\u0129\t\2\2\2\u0128\u0127\3\2\2\2\u0128\u0129\3\2\2\2\u0129\u012d\3\2"+
		"\2\2\u012a\u012c\t\3\2\2\u012b\u012a\3\2\2\2\u012c\u012f\3\2\2\2\u012d"+
		"\u012b\3\2\2\2\u012d\u012e\3\2\2\2\u012e\u0130\3\2\2\2\u012f\u012d\3\2"+
		"\2\2\u0130\u0132\7$\2\2\u0131\u0124\3\2\2\2\u0132\u0133\3\2\2\2\u0133"+
		"\u0131\3\2\2\2\u0133\u0134\3\2\2\2\u0134\u0137\3\2\2\2\u0135\u0136\7-"+
		"\2\2\u0136\u0138\5W,\2\u0137\u0135\3\2\2\2\u0137\u0138\3\2\2\2\u0138\u013a"+
		"\3\2\2\2\u0139\u0131\3\2\2\2\u013a\u013b\3\2\2\2\u013b\u0139\3\2\2\2\u013b"+
		"\u013c\3\2\2\2\u013cZ\3\2\2\2\u013d\u013f\t\6\2\2\u013e\u013d\3\2\2\2"+
		"\u013e\u013f\3\2\2\2\u013f\u0141\3\2\2\2\u0140\u0142\t\7\2\2\u0141\u0140"+
		"\3\2\2\2\u0142\u0143\3\2\2\2\u0143\u0141\3\2\2\2\u0143\u0144\3\2\2\2\u0144"+
		"\u014b\3\2\2\2\u0145\u0147\7\60\2\2\u0146\u0148\t\7\2\2\u0147\u0146\3"+
		"\2\2\2\u0148\u0149\3\2\2\2\u0149\u0147\3\2\2\2\u0149\u014a\3\2\2\2\u014a"+
		"\u014c\3\2\2\2\u014b\u0145\3\2\2\2\u014b\u014c\3\2\2\2\u014c\\\3\2\2\2"+
		"\u014d\u014e\7\61\2\2\u014e\u014f\7,\2\2\u014f\u0153\3\2\2\2\u0150\u0152"+
		"\13\2\2\2\u0151\u0150\3\2\2\2\u0152\u0155\3\2\2\2\u0153\u0154\3\2\2\2"+
		"\u0153\u0151\3\2\2\2\u0154\u0156\3\2\2\2\u0155\u0153\3\2\2\2\u0156\u0157"+
		"\7,\2\2\u0157\u0158\7\61\2\2\u0158\u0159\3\2\2\2\u0159\u015a\b/\2\2\u015a"+
		"^\3\2\2\2\u015b\u015c\7\61\2\2\u015c\u015d\7\61\2\2\u015d\u0161\3\2\2"+
		"\2\u015e\u0160\n\b\2\2\u015f\u015e\3\2\2\2\u0160\u0163\3\2\2\2\u0161\u015f"+
		"\3\2\2\2\u0161\u0162\3\2\2\2\u0162\u0164\3\2\2\2\u0163\u0161\3\2\2\2\u0164"+
		"\u0165\b\60\2\2\u0165`\3\2\2\2\u0166\u0168\t\t\2\2\u0167\u0166\3\2\2\2"+
		"\u0168\u0169\3\2\2\2\u0169\u0167\3\2\2\2\u0169\u016a\3\2\2\2\u016a\u016b"+
		"\3\2\2\2\u016b\u016c\b\61\2\2\u016cb\3\2\2\2\u016d\u016e\7\61\2\2\u016e"+
		"\u016f\7\61\2\2\u016f\u0173\3\2\2\2\u0170\u0172\n\b\2\2\u0171\u0170\3"+
		"\2\2\2\u0172\u0175\3\2\2\2\u0173\u0171\3\2\2\2\u0173\u0174\3\2\2\2\u0174"+
		"\u0177\3\2\2\2\u0175\u0173\3\2\2\2\u0176\u0178\7\17\2\2\u0177\u0176\3"+
		"\2\2\2\u0177\u0178\3\2\2\2\u0178\u0179\3\2\2\2\u0179\u017a\7\f\2\2\u017a"+
		"\u017b\3\2\2\2\u017b\u017c\b\62\2\2\u017cd\3\2\2\2\25\2\u0112\u0117\u0120"+
		"\u0124\u0128\u012d\u0133\u0137\u013b\u013e\u0143\u0149\u014b\u0153\u0161"+
		"\u0169\u0173\u0177\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}